#!/usr/bin/env python3
import sys
import requests
import base64
import urllib3
import getpass
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


if len(sys.argv) !=4:
	print ("usage :-")
	print ("./client_delete <HSM_IP_OR_HOSTNAME> <appliance_username> <clientName>")
	quit()
else:
	hostname = sys.argv[1]
	username = sys.argv[2]
	password = getpass.getpass(prompt="["+username+"] Password : ")
	auth = username + ":" + password
	clientName = sys.argv[3]


authString = base64.b64encode(bytes(auth, 'utf-8')).decode("ascii")
url = "https://"+hostname+":8443/api/lunasa/ntls/clients/"+clientName
header = {'Content-type': 'application/vnd.safenetinc.lunasa+json;version=', 'Authorization': 'Basic %s' % authString}
response = "No Response received."


print ("Connecting to Luna HSM: [",hostname, "]\n")
try:
	response = requests.get(url, headers=header, verify=False)
except OSError as osErr:
	print("\tFailed to connect to :", hostname)
	print("\tReason: ", osErr)
	quit();

if response.status_code==401:
        print("Login failed.")
        quit()

if response.status_code==404:
        print ("Client not found, Response code: ", response.status_code)
        quit()
if response.status_code!=200:
	print ("Command failed, Response code: ", response.status_code)
	quit()



if response.status_code==200:
	data = response.json()

	print ("Client Name	:", data['clientID'])

	if data['hostname']=='':
		print ("Hostname 	: NOT SET")
	else:
		print ("Hostname 	:", data['hostname'])

	print ("IP Address 	: ", end='')
	if data['ip']=='':
		print ("NOT SET")
	else:
		print (data['ip'])
	print ("Partitions")

	url = "https://"+hostname+":8443"+data['links']
	response = requests.get(url, headers=header, verify=False)
	clientInfo = response.json()
	if len(clientInfo['links']) > 0:
		for links in clientInfo['links']:
			print("  -", links['id'])
		choice = input("Type 'delete-it' to delete this client : ")
		if (choice=='delete-it'):
			url = "https://" + hostname + ":8443/api/lunasa/ntls/clients/" + data['clientID']
			print (url)
			response = requests.delete(url, headers=header, verify=False)
			if (response.status_code==204):
				print ("client deleted successfully.")
	else:
		print("\tNone Assigned.")
		quit()
